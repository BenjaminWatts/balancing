name: Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: true
        default: 'testpypi'
        type: choice
        options:
          - testpypi
          - pypi

jobs:
  build:
    name: Build distribution packages
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine setuptools>=77.0.0 wheel
    
    - name: Build distribution packages
      run: |
        rm -rf dist/
        python -m build
    
    - name: Check package integrity
      run: twine check dist/*
    
    - name: Store distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  publish-to-testpypi:
    name: Publish to TestPyPI
    # Only run on manual dispatch with testpypi selected
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'testpypi'
    needs: [build]
    runs-on: ubuntu-latest
    
    steps:
    - name: Download distribution packages
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    
    - name: Install twine
      run: pip install twine
    
    - name: Publish to TestPyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TESTPYPI_API_TOKEN }}
      run: |
        twine upload --repository testpypi dist/*

  publish-to-pypi:
    name: Publish to PyPI
    # Only run on release publication or manual dispatch with pypi selected
    if: |
      github.event_name == 'release' || 
      (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'pypi')
    needs: [build]
    runs-on: ubuntu-latest
    
    steps:
    - name: Download distribution packages
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    
    - name: Install twine
      run: pip install twine
    
    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        twine upload dist/*

